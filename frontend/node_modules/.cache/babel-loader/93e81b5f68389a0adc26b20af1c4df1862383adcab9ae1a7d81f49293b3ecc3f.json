{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ishaa\\\\projects\\\\CEN3031-Learning-Project\\\\frontend\\\\src\\\\components\\\\DeckManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CardCreationForm from './CardCreationForm';\nimport StudySession from './StudySession';\nimport './DeckManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeckManagement = () => {\n  _s();\n  const [decks, setDecks] = useState([]);\n  const [selectedDeck, setSelectedDeck] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [showCreateCard, setShowCreateCard] = useState(false);\n  const [showCreateDeck, setShowCreateDeck] = useState(false);\n  const [showStudySession, setShowStudySession] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetchDecks();\n  }, []);\n  const fetchDecks = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/cards/decks', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      if (data.success) {\n        setDecks(data.data.decks);\n      }\n    } catch (error) {\n      console.error('Error fetching decks:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchCards = async deckId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5000/api/cards/decks/${deckId}/cards`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      if (data.success) {\n        setCards(data.data.cards);\n      }\n    } catch (error) {\n      console.error('Error fetching cards:', error);\n    }\n  };\n  const handleDeckSelect = deck => {\n    setSelectedDeck(deck);\n    fetchCards(deck._id);\n  };\n  const handleCardCreated = newCard => {\n    setCards(prev => [newCard, ...prev]);\n    setShowCreateCard(false);\n    // Update deck card count\n    setDecks(prev => prev.map(deck => deck._id === selectedDeck._id ? {\n      ...deck,\n      cardCount: deck.cardCount + 1\n    } : deck));\n  };\n  const handleCreateDeck = async deckData => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/cards/decks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(deckData)\n      });\n      const data = await response.json();\n      if (data.success) {\n        setDecks(prev => [data.data.deck, ...prev]);\n        setShowCreateDeck(false);\n      } else {\n        alert(data.message || 'Failed to create deck');\n      }\n    } catch (error) {\n      console.error('Error creating deck:', error);\n      alert('Failed to create deck. Please try again.');\n    }\n  };\n  const handleStartStudy = () => {\n    if (cards.length === 0) {\n      alert('No cards in this deck. Add some cards first!');\n      return;\n    }\n    setShowStudySession(true);\n  };\n  const handleEndStudySession = () => {\n    setShowStudySession(false);\n    // Refresh cards to get updated stats\n    if (selectedDeck) {\n      fetchCards(selectedDeck._id);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck-management\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading your decks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n  if (showStudySession && selectedDeck) {\n    return /*#__PURE__*/_jsxDEV(StudySession, {\n      deck: selectedDeck,\n      onEndSession: handleEndStudySession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deck-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck-management-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Decks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-deck-button\",\n        onClick: () => setShowCreateDeck(true),\n        children: \"+ New Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck-management-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"decks-sidebar\",\n        children: decks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No decks yet. Create your first deck to get started!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"decks-list\",\n          children: decks.map(deck => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `deck-item ${(selectedDeck === null || selectedDeck === void 0 ? void 0 : selectedDeck._id) === deck._id ? 'active' : ''}`,\n            onClick: () => handleDeckSelect(deck),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"deck-name\",\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"deck-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-count\",\n                children: [deck.cardCount, \" cards\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"deck-date\",\n                children: new Date(deck.updatedAt).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, deck._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deck-content\",\n        children: selectedDeck ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deck-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"deck-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedDeck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"deck-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"study-button\",\n                onClick: handleStartStudy,\n                disabled: cards.length === 0,\n                children: \"\\uD83C\\uDFAF Study Deck\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"add-card-button\",\n                onClick: () => setShowCreateCard(true),\n                children: \"+ Add Card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), selectedDeck.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"deck-description\",\n            children: selectedDeck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Cards (\", cards.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), cards.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-cards\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No cards in this deck yet. Add your first card!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards-list\",\n              children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-front\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Front:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 27\n                  }, this), \" \", card.front]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-back\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Back:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 27\n                  }, this), \" \", card.back]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `difficulty ${card.difficulty}`,\n                    children: card.difficulty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-stats\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"study-count\",\n                      children: [\"Studied: \", card.studyCount || 0]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"accuracy\",\n                      children: [\"Accuracy: \", card.accuracy || 0, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 27\n                  }, this), card.tags.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-tags\",\n                    children: card.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"tag\",\n                      children: tag\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 25\n                }, this)]\n              }, card._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-deck-selected\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a deck to view and manage cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), showCreateCard && selectedDeck && /*#__PURE__*/_jsxDEV(CardCreationForm, {\n      deckId: selectedDeck._id,\n      onCardCreated: handleCardCreated,\n      onCancel: () => setShowCreateCard(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this), showCreateDeck && /*#__PURE__*/_jsxDEV(CreateDeckForm, {\n      onCreateDeck: handleCreateDeck,\n      onCancel: () => setShowCreateDeck(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n\n// Simple deck creation form component\n_s(DeckManagement, \"AHTbp3EHtVEEA80yjan93ZjR9m8=\");\n_c = DeckManagement;\nconst CreateDeckForm = ({\n  onCreateDeck,\n  onCancel\n}) => {\n  _s2();\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    isPublic: false\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (formData.name.trim()) {\n      onCreateDeck(formData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-deck-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-deck-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onCancel,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Deck Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.name,\n            onChange: e => setFormData({\n              ...formData,\n              name: e.target.value\n            }),\n            placeholder: \"Enter deck name...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.description,\n            onChange: e => setFormData({\n              ...formData,\n              description: e.target.value\n            }),\n            placeholder: \"Enter deck description...\",\n            rows: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Create Deck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\n_s2(CreateDeckForm, \"2FLG0trnIt73+m7z3lWy/nliZUE=\");\n_c2 = CreateDeckForm;\nexport default DeckManagement;\nvar _c, _c2;\n$RefreshReg$(_c, \"DeckManagement\");\n$RefreshReg$(_c2, \"CreateDeckForm\");","map":{"version":3,"names":["React","useState","useEffect","CardCreationForm","StudySession","jsxDEV","_jsxDEV","DeckManagement","_s","decks","setDecks","selectedDeck","setSelectedDeck","cards","setCards","showCreateCard","setShowCreateCard","showCreateDeck","setShowCreateDeck","showStudySession","setShowStudySession","isLoading","setIsLoading","fetchDecks","token","localStorage","getItem","response","fetch","headers","data","json","success","error","console","fetchCards","deckId","handleDeckSelect","deck","_id","handleCardCreated","newCard","prev","map","cardCount","handleCreateDeck","deckData","method","body","JSON","stringify","alert","message","handleStartStudy","length","handleEndStudySession","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onEndSession","onClick","name","Date","updatedAt","toLocaleDateString","disabled","description","card","front","back","difficulty","studyCount","accuracy","tags","tag","index","onCardCreated","onCancel","CreateDeckForm","onCreateDeck","_c","_s2","formData","setFormData","isPublic","handleSubmit","e","preventDefault","trim","onSubmit","type","value","onChange","target","placeholder","required","rows","_c2","$RefreshReg$"],"sources":["C:/Users/ishaa/projects/CEN3031-Learning-Project/frontend/src/components/DeckManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CardCreationForm from './CardCreationForm';\r\nimport StudySession from './StudySession';\r\nimport './DeckManagement.css';\r\n\r\nconst DeckManagement = () => {\r\n  const [decks, setDecks] = useState([]);\r\n  const [selectedDeck, setSelectedDeck] = useState(null);\r\n  const [cards, setCards] = useState([]);\r\n  const [showCreateCard, setShowCreateCard] = useState(false);\r\n  const [showCreateDeck, setShowCreateDeck] = useState(false);\r\n  const [showStudySession, setShowStudySession] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchDecks();\r\n  }, []);\r\n\r\n  const fetchDecks = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/cards/decks', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setDecks(data.data.decks);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching decks:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchCards = async (deckId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:5000/api/cards/decks/${deckId}/cards`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setCards(data.data.cards);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching cards:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeckSelect = (deck) => {\r\n    setSelectedDeck(deck);\r\n    fetchCards(deck._id);\r\n  };\r\n\r\n  const handleCardCreated = (newCard) => {\r\n    setCards(prev => [newCard, ...prev]);\r\n    setShowCreateCard(false);\r\n    // Update deck card count\r\n    setDecks(prev => prev.map(deck => \r\n      deck._id === selectedDeck._id \r\n        ? { ...deck, cardCount: deck.cardCount + 1 }\r\n        : deck\r\n    ));\r\n  };\r\n\r\n  const handleCreateDeck = async (deckData) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/cards/decks', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(deckData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setDecks(prev => [data.data.deck, ...prev]);\r\n        setShowCreateDeck(false);\r\n      } else {\r\n        alert(data.message || 'Failed to create deck');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating deck:', error);\r\n      alert('Failed to create deck. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleStartStudy = () => {\r\n    if (cards.length === 0) {\r\n      alert('No cards in this deck. Add some cards first!');\r\n      return;\r\n    }\r\n    setShowStudySession(true);\r\n  };\r\n\r\n  const handleEndStudySession = () => {\r\n    setShowStudySession(false);\r\n    // Refresh cards to get updated stats\r\n    if (selectedDeck) {\r\n      fetchCards(selectedDeck._id);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"deck-management\">\r\n        <div className=\"loading\">Loading your decks...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (showStudySession && selectedDeck) {\r\n    return (\r\n      <StudySession \r\n        deck={selectedDeck}\r\n        onEndSession={handleEndStudySession}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"deck-management\">\r\n      <div className=\"deck-management-header\">\r\n        <h2>My Decks</h2>\r\n        <button \r\n          className=\"create-deck-button\"\r\n          onClick={() => setShowCreateDeck(true)}\r\n        >\r\n          + New Deck\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"deck-management-content\">\r\n        <div className=\"decks-sidebar\">\r\n          {decks.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              <p>No decks yet. Create your first deck to get started!</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"decks-list\">\r\n              {decks.map(deck => (\r\n                <div \r\n                  key={deck._id}\r\n                  className={`deck-item ${selectedDeck?._id === deck._id ? 'active' : ''}`}\r\n                  onClick={() => handleDeckSelect(deck)}\r\n                >\r\n                  <div className=\"deck-name\">{deck.name}</div>\r\n                  <div className=\"deck-meta\">\r\n                    <span className=\"card-count\">{deck.cardCount} cards</span>\r\n                    <span className=\"deck-date\">\r\n                      {new Date(deck.updatedAt).toLocaleDateString()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"deck-content\">\r\n          {selectedDeck ? (\r\n            <div className=\"deck-details\">\r\n              <div className=\"deck-header\">\r\n                <h3>{selectedDeck.name}</h3>\r\n                <div className=\"deck-actions\">\r\n                  <button \r\n                    className=\"study-button\"\r\n                    onClick={handleStartStudy}\r\n                    disabled={cards.length === 0}\r\n                  >\r\n                    🎯 Study Deck\r\n                  </button>\r\n                  <button \r\n                    className=\"add-card-button\"\r\n                    onClick={() => setShowCreateCard(true)}\r\n                  >\r\n                    + Add Card\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              \r\n              {selectedDeck.description && (\r\n                <p className=\"deck-description\">{selectedDeck.description}</p>\r\n              )}\r\n\r\n              <div className=\"cards-section\">\r\n                <h4>Cards ({cards.length})</h4>\r\n                {cards.length === 0 ? (\r\n                  <div className=\"empty-cards\">\r\n                    <p>No cards in this deck yet. Add your first card!</p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"cards-list\">\r\n                    {cards.map(card => (\r\n                      <div key={card._id} className=\"card-item\">\r\n                        <div className=\"card-front\">\r\n                          <strong>Front:</strong> {card.front}\r\n                        </div>\r\n                        <div className=\"card-back\">\r\n                          <strong>Back:</strong> {card.back}\r\n                        </div>\r\n                        <div className=\"card-meta\">\r\n                          <span className={`difficulty ${card.difficulty}`}>\r\n                            {card.difficulty}\r\n                          </span>\r\n                          <div className=\"card-stats\">\r\n                            <span className=\"study-count\">\r\n                              Studied: {card.studyCount || 0}\r\n                            </span>\r\n                            <span className=\"accuracy\">\r\n                              Accuracy: {card.accuracy || 0}%\r\n                            </span>\r\n                          </div>\r\n                          {card.tags.length > 0 && (\r\n                            <div className=\"card-tags\">\r\n                              {card.tags.map((tag, index) => (\r\n                                <span key={index} className=\"tag\">{tag}</span>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"no-deck-selected\">\r\n              <p>Select a deck to view and manage cards</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {showCreateCard && selectedDeck && (\r\n        <CardCreationForm\r\n          deckId={selectedDeck._id}\r\n          onCardCreated={handleCardCreated}\r\n          onCancel={() => setShowCreateCard(false)}\r\n        />\r\n      )}\r\n\r\n      {showCreateDeck && (\r\n        <CreateDeckForm\r\n          onCreateDeck={handleCreateDeck}\r\n          onCancel={() => setShowCreateDeck(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Simple deck creation form component\r\nconst CreateDeckForm = ({ onCreateDeck, onCancel }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    isPublic: false\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (formData.name.trim()) {\r\n      onCreateDeck(formData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-deck-modal\">\r\n      <div className=\"create-deck-form\">\r\n        <div className=\"form-header\">\r\n          <h3>Create New Deck</h3>\r\n          <button className=\"close-button\" onClick={onCancel}>×</button>\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Deck Name *</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n              placeholder=\"Enter deck name...\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description</label>\r\n            <textarea\r\n              value={formData.description}\r\n              onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n              placeholder=\"Enter deck description...\"\r\n              rows={3}\r\n            />\r\n          </div>\r\n          <div className=\"form-actions\">\r\n            <button type=\"button\" onClick={onCancel}>Cancel</button>\r\n            <button type=\"submit\">Create Deck</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeckManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}